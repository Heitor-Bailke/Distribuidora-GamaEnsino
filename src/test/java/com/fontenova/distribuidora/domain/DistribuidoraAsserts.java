package com.fontenova.distribuidora.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DistribuidoraAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDistribuidoraAllPropertiesEquals(Distribuidora expected, Distribuidora actual) {
        assertDistribuidoraAutoGeneratedPropertiesEquals(expected, actual);
        assertDistribuidoraAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDistribuidoraAllUpdatablePropertiesEquals(Distribuidora expected, Distribuidora actual) {
        assertDistribuidoraUpdatableFieldsEquals(expected, actual);
        assertDistribuidoraUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDistribuidoraAutoGeneratedPropertiesEquals(Distribuidora expected, Distribuidora actual) {
        assertThat(expected)
            .as("Verify Distribuidora auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDistribuidoraUpdatableFieldsEquals(Distribuidora expected, Distribuidora actual) {
        assertThat(expected)
            .as("Verify Distribuidora relevant properties")
            .satisfies(e -> assertThat(e.getNome()).as("check nome").isEqualTo(actual.getNome()))
            .satisfies(e -> assertThat(e.getCep()).as("check cep").isEqualTo(actual.getCep()))
            .satisfies(e -> assertThat(e.getCidade()).as("check cidade").isEqualTo(actual.getCidade()))
            .satisfies(e -> assertThat(e.getBairro()).as("check bairro").isEqualTo(actual.getBairro()))
            .satisfies(e -> assertThat(e.getRua()).as("check rua").isEqualTo(actual.getRua()))
            .satisfies(e -> assertThat(e.getNumero()).as("check numero").isEqualTo(actual.getNumero()))
            .satisfies(e -> assertThat(e.getReferencia()).as("check referencia").isEqualTo(actual.getReferencia()))
            .satisfies(e -> assertThat(e.getEstado()).as("check estado").isEqualTo(actual.getEstado()))
            .satisfies(e -> assertThat(e.getDetalhes()).as("check detalhes").isEqualTo(actual.getDetalhes()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDistribuidoraUpdatableRelationshipsEquals(Distribuidora expected, Distribuidora actual) {
        // empty method
    }
}
